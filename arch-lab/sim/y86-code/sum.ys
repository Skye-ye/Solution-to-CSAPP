# Execution begins at address 0 
    .pos 0
    irmovq stack, %rsp
    call main
    halt

# Linked list
    .align 8
ele1:
    .quad 0x00a
    .quad ele2
ele2:
    .quad 0x0b0
    .quad ele3
ele3:
    .quad 0xc00
    .quad 0

main:
    irmovq ele1, %rdi
    call sum_list
    ret

sum_list:
    irmovq 0, %rax # val = 0
    jmp test # jump to test
loop:
    mrmovq (%rdi), %r10 # ls->val
    addq %r10, %rax # val += ls->val
    mrmovq 8(%rdi), %rdi # ls = ls->next
test:
    andq %rdi, %rdi # test ls
    jne loop # if ls != 0, goto loop
    ret

    .pos 0x200
stack:
